//
//  SchedulesPresenter.swift
//  MackTIA
//
//  Created by Luciano Moreira Turrini on 8/15/16.
//  Copyright (c) 2016 Mackenzie. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol SchedulesPresenterInput {
    func presentFetchedSchedules(response: SchedulesResponse)
}

protocol SchedulesPresenterOutput: class {
    func displayFetchedSchedules(viewModel: SchedulesViewModel.Success)
    func displayFetchedSchedulesError(viewModel: SchedulesViewModel.Error)
}

class SchedulesPresenter: SchedulesPresenterInput {
  
    weak var output: SchedulesPresenterOutput!

    // MARK: Presentation logic
    
    func presentFetchedSchedules(response: SchedulesResponse) {
        
        var filteredSchedules : [Int : [Schedule]] = [:]
        let allSchedules = response.schedules
        
        for schedule in allSchedules {
            var scds = filteredSchedules[Int(schedule.day!)!]
            scds = scds ?? [Schedule]()
            scds?.append(schedule)
            filteredSchedules[Int(schedule.day!)!] = scds
        }

        
        if response.error != nil {
            let error:(title:String,message:String) = ErrorParser.parse(response.error!)
            let viewModel = SchedulesViewModel.Error(errorMessage: error.message, errorTitle: error.title)
            output.displayFetchedSchedulesError(viewModel)
        } else {
            let viewModel = SchedulesViewModel.Success(displayedSchedules: filteredSchedules)
            output.displayFetchedSchedules(viewModel)
        }
    }
}
